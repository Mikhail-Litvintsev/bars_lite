version: '3'
networks:
  bars:
    driver: bridge
services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_bars
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/ssl/certs/
      - ./nginx/cron:/etc/cron.d/cron
    depends_on:
      - php_bars
      - postgresql_bars
    networks:
      - bars
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php_bars
    volumes:
      - /var/www/export:/var/www/export
      - ./src:/var/www/html
      - ./php/memory.ini:/usr/local/etc/php/conf.d/memory.ini
      - ./php/zzz-xdebug.ini:/usr/local/etc/php/conf.d/zzz-xdebug.ini
    environment:
      XDEBUG_CONFIG: 'discover_client_host=true log_level=0 client_host=172.17.0.1'
      COMPOSER_MEMORY_LIMIT: -1
    networks:
      - bars
  postgresql:
    image: postgres:10.3-alpine
    command: postgres -c 'max_connections=300'
    container_name: postgresql_bars
    ports:
      - "5432:5432"
    restart: unless-stopped
    tty: true
    volumes:
      - ./src:/var/www/html
      - /var/www/export:/var/www/export
      - ./postgresql:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: 'BarsDB'
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
      SERVICE_TAGS: 'dev'
      SERVICE_NAME: 'pgsql'
    networks:
      - bars
  redis:
    image: redis:alpine
    container_name: redis_bars
    command: redis-server
    networks:
      - bars
  adminer:
    image: adminer
    container_name: adminer_bars
    restart: always
    ports:
      - "8080:8080"
    networks:
      - bars
